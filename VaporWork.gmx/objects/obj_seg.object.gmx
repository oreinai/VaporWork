<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player_walk</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// add to the snake and find assigned state obj
ds_list_add(global.members, id);
position =  ds_list_find_index(global.members, id) * global.followDistance;
state = ds_list_find_value(global.tail, position);

//update to state data

//dir = state.facing;
x = state.x;
y = state.y;

/*
// set arm offset and spawn arms
arm_r = instance_create(x, y, obj_arm_r);
arm_r.torso = id;
arm_l = instance_create(x, y, obj_arm_l);
arm_l.torso = id;
*/
//image_speed = global.imagespd;

/*/debug
show_debug_message("|SEG||create| follow distance is: " + string( global.followDistance ));
show_debug_message("|SEG||create| index in members list: " + string( ds_list_find_index(global.members, id)) );
show_debug_message("|SEG||create| position on create: " + string( position ));
show_debug_message("|SEG||create| assigned state on create: " + string( state ));
*/


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>state = ds_list_find_value(global.tail, position);

//update location
dir = state.facing;
x = state.x;
y = state.y;
/*
switch dir{
        case 0: //if dir is up
            direction = 90;
            break;
            
        case 1: //if dir is right
            direction = 0;
            break;
            
        case 2: //if dir is down
            direction = 270;
            break;
            
        case 3: //if dir is left
            direction = 180;
            break;
            
        default:
            if keyboard_check_pressed(ord("O")) show_debug_message("|SEG|| Step || no direction? current dir: " + string(dir) + " Facing value of state: " + string(state.facing));
            break;
        }*/

//image_angle = direction;

/*
if (ds_list_find_index(global.members, id) = (ds_list_size(members) - 1)){
    isTail = true;
}else{
    isTail = true;
}

if (isTail &amp;&amp; (sprite_index != spr_tail)){
sprite_index = spr_tail;
image_index = global.player.image_index;    
}else if (!isTail &amp;&amp; (sprite_index = spr_tail)){
sprite_index = spr_body1;    
image_index = global.player.image_index;  
}

*/


/*/update arms
switch dir{
        case 0: //if dir is up
            arm_r.x = x + arm_offset;
            arm_r.y = y;
            if keyboard_check_pressed(ord("O")) show_debug_message("|SEG|| Step || setting arm r UP.  My X: " + string(x) + " arm X: " + string(arm_r.x));
            break;
            
        case 1: //if dir is right
            arm_r.x = x;
            arm_r.y = y + arm_offset;
            if keyboard_check_pressed(ord("O")) show_debug_message("|SEG|| Step || setting arm r UP.  My X: " + string(x) + " arm X: " + string(arm_r.x));
            break;
            
        case 2: //if dir is down
            arm_r.x = x - arm_offset;
            arm_r.y = y;
            if keyboard_check_pressed(ord("O")) show_debug_message("|SEG|| Step || setting arm r UP.  My X: " + string(x) + " arm X: " + string(arm_r.x));
            break;
            
        case 3: //if dir is left
            arm_r.x = x;
            arm_r.y = y - arm_offset;
            if keyboard_check_pressed(ord("O")) show_debug_message("|SEG|| Step || setting arm r UP.  My X: " + string(x) + " arm X: " + string(arm_r.x));
            break;
            
        default:
            if keyboard_check_pressed(ord("O")) show_debug_message("|SEG|| Step || no direction? current dir: " + string(dir) + " Facing value of state: " + string(state.facing));
            break;
    }*/



//debug
/*if keyboard_check_pressed(ord("P")){
    show_debug_message("SEG #:" + string( ds_list_find_index(global.members, id)) + "- assigned state: " + string( state ));
} */
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
